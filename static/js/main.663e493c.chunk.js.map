{"version":3,"sources":["components/header.js","components/footer.js","components/home.js","components/projects.js","components/resume.js","components/contact.js","App.js","serviceWorker.js","index.js"],"names":["Header","to","className","Footer","href","target","rel","icon","faLinkedin","faGithubSquare","Home","Projects","src","alt","Resume","width","height","frameborder","allowtransparency","allowfullscreen","Contact","id","onSubmit","e","preventDefault","emailjs","sendForm","then","result","console","log","text","alert","error","type","name","htmlFor","value","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6PAsBeA,MAnBf,WACE,OACE,gCACE,4BAAI,kBAAC,IAAD,CAAMC,GAAG,KAAT,kBACJ,yBAAKC,UAAU,SACb,wBAAIA,UAAU,cAAd,iBACA,wBAAIA,UAAU,gBAAd,sBACA,wBAAIA,UAAU,eAAd,sBAEF,6BACE,0BAAMA,UAAU,OAAM,kBAAC,IAAD,CAAMD,GAAG,KAAT,UACtB,0BAAMC,UAAU,UAAS,kBAAC,IAAD,CAAMD,GAAG,aAAT,aACzB,0BAAMC,UAAU,SAAQ,kBAAC,IAAD,CAAMD,GAAG,WAAT,cACxB,0BAAMC,UAAU,QAAO,kBAAC,IAAD,CAAMD,GAAG,YAAT,e,gBCDhBE,MAVf,WACE,OACE,oEAEE,uBAAGD,UAAU,SAAQ,uBAAGE,KAAK,6CAA6CC,OAAO,SAASC,IAAI,uBAAsB,kBAAC,IAAD,CAAiBC,KAAMC,OAC3I,0BAAMN,UAAU,QAAO,uBAAGE,KAAK,8BAA8BC,OAAO,SAASC,IAAI,uBAAsB,kBAAC,IAAD,CAAiBC,KAAME,WCkCrHC,MA1Cf,WACE,OACE,8BACE,uDAGA,oYAMA,8bAOA,8EAGA,4BACE,sCAAM,0BAAMR,UAAU,eAAhB,SACN,sCAAM,0BAAMA,UAAU,eAAhB,QACN,sCAAM,0BAAMA,UAAU,eAAhB,eACN,sCAAM,0BAAMA,UAAU,eAAhB,UACN,sCAAM,0BAAMA,UAAU,eAAhB,SACN,sCAAM,0BAAMA,UAAU,eAAhB,YACN,sCAAM,0BAAMA,UAAU,eAAhB,QACN,sCAAM,0BAAMA,UAAU,eAAhB,kBACN,sCAAM,0BAAMA,UAAU,eAAhB,WACN,sCAAM,0BAAMA,UAAU,eAAhB,SACN,sCAAM,0BAAMA,UAAU,eAAhB,QACN,sCAAM,0BAAMA,UAAU,eAAhB,iBACN,sCAAM,0BAAMA,UAAU,eAAhB,cACN,sCAAM,0BAAMA,UAAU,eAAhB,oBCWCS,MA/Cf,WACE,OACE,8BACE,uBAAGP,KAAK,kCAAkCC,OAAO,SAASC,IAAI,uBAC5D,8CACA,yBAAKM,IAAI,6BAA6BC,IAAI,oBAE5C,wTAKA,uBAAGT,KAAK,oCAAoCC,OAAO,SAASC,IAAI,uBAC9D,oEACA,yBAAKM,IAAI,uBAAuBC,IAAI,2BAEtC,oPAGgC,uBAAGT,KAAK,0BAA0BC,OAAO,SAASC,IAAI,uBAAtD,cAHhC,oGAMA,uBAAGF,KAAK,wDAAwDC,OAAO,SAASC,IAAI,uBAClF,kDACA,yBAAKM,IAAI,yBAAyBC,IAAI,wBAExC,uXAMA,uBAAGT,KAAK,6BAA6BC,OAAO,SAASC,IAAI,uBACvD,4DACA,yBAAKM,IAAI,0BAA0BC,IAAI,4BAEzC,ydC5BSC,MARf,WACE,OACE,8BACE,4BAAQC,MAAM,OAAOC,OAAO,QAAQJ,IAAI,+DAA+DK,YAAY,IAAIC,mBAAiB,EAACC,iBAAe,M,iBCkC/IC,MApCf,WAeE,OACE,8BACE,gRAKA,0BAAMC,GAAG,eAAeC,SApB5B,SAAmBC,GACjBA,EAAEC,iBAEFC,IAAQC,SAAS,QAAS,eAAgBH,EAAElB,OAAQ,8BACjDsB,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAOG,MACnBC,MAAM,iCACL,SAACC,GACFJ,QAAQC,IAAIG,EAAMF,MAClBC,MAAM,wDAYN,2BAAOE,KAAK,SAASC,KAAK,mBAC1B,2BAAOC,QAAQ,aAAf,QACA,2BAAOD,KAAK,YAAYD,KAAK,SAC7B,2BAAOE,QAAQ,cAAf,SACA,2BAAOD,KAAK,aAAaD,KAAK,UAC9B,2BAAOE,QAAQ,WAAf,WACA,8BAAUD,KAAK,YACf,4BAAQD,KAAK,SAASG,MAAM,QAA5B,aCTOC,MAbf,WACE,OACE,yBAAKpC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,KAAI,kBAAC,EAAD,OACtB,kBAAC,IAAD,CAAOA,KAAK,aAAY,kBAAC,EAAD,OACxB,kBAAC,IAAD,CAAOA,KAAK,WAAU,kBAAC,EAAD,OACtB,kBAAC,IAAD,CAAOA,KAAK,YAAW,kBAAC,EAAD,OACvB,kBAAC,EAAD,QCPcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,IAAD,KAAQ,kBAAC,EAAD,OAAkBC,SAASC,eAAe,SD4H5D,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzB,MAAK,SAAA0B,GACjCA,EAAaC,kB","file":"static/js/main.663e493c.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n  return (\n    <header>\n      <h1><Link to=\"/\">Corey Ferland</Link></h1>\n      <div className=\"title\">\n        <h3 className=\"left-title\">Web Developer</h3>\n        <h3 className=\"center-title\">Solutions Engineer</h3>\n        <h3 className=\"right-title\">Digital Marketing</h3>\n      </div>\n      <nav>\n        <span className=\"red\"><Link to=\"/\">About</Link></span>\n        <span className=\"yellow\"><Link to=\"/projects\">Projects</Link></span>\n        <span className=\"green\"><Link to=\"/resume\">Resumé</Link></span>\n        <span className=\"blue\"><Link to=\"/contact\">Contact</Link></span>\n      </nav>\n    </header>\n  )\n}\n\nexport default Header;","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLinkedin, faGithubSquare } from '@fortawesome/free-brands-svg-icons'\n\nfunction Footer() {\n  return (\n    <footer>\n      Copyright © 2020 Corey Ferland \n      <p className=\"icons\"><a href=\"https://www.linkedin.com/in/corey-ferland/\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faLinkedin} /></a>\n      <span className=\"icon\"><a href=\"https://github.com/cferland\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faGithubSquare} /></a></span></p>\n    </footer>\n  )\n}\n\nexport default Footer;","import React from 'react';\n\nfunction Home() {\n  return (\n    <main>\n      <p>\n        Welcome to my portfolio!\n      </p>\n      <p>\n        My name is Corey Ferland and I am a Full Stack Web Developer with a background in graphic design,\n        digital marketing, content management, and client services.\n        While my career and studies have taken me into a variety of fields,\n        I began learning the basics of web development in high school and have continued to build on that knowledge over the past 10 years.\n      </p>\n      <p>\n        I strive to incorporate efficiency and best practices in all the applications that I develop,\n        while maintaining a user experience that is straightforward and intuitive.\n        I am familiar with Agile methodologies and have experience working as part of a team as both a designer and a developer,\n        providing me with a unique perspective that allows me to seamlessly integrate design concepts into the\n        applications I create.\n      </p>\n      <p>\n        My current skills include such technologies as:\n      </p>\n      <ul>\n        <li>• <span className=\"no-gradient\">HTML</span></li>\n        <li>• <span className=\"no-gradient\">CSS</span></li>\n        <li>• <span className=\"no-gradient\">JavaScript</span></li>\n        <li>• <span className=\"no-gradient\">React</span></li>\n        <li>• <span className=\"no-gradient\">Node</span></li>\n        <li>• <span className=\"no-gradient\">Express</span></li>\n        <li>• <span className=\"no-gradient\">SQL</span></li>\n        <li>• <span className=\"no-gradient\">Ruby on Rails</span></li>\n        <li>• <span className=\"no-gradient\">Python</span></li>\n        <li>• <span className=\"no-gradient\">JSON</span></li>\n        <li>• <span className=\"no-gradient\">CLI</span></li>\n        <li>• <span className=\"no-gradient\">Git / GitHub</span></li>\n        <li>• <span className=\"no-gradient\">REST APIs</span></li>\n        <li>• <span className=\"no-gradient\">...and more!</span></li>\n      </ul>\n    </main>\n  )\n}\n\nexport default Home;","import React from 'react';\n\nfunction Projects() {\n  return (\n    <main>\n      <a href=\"http://tarot-universe.surge.sh/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2>Tarot Card App</h2>\n        <img src=\"/images/tarot-universe.png\" alt=\"Tarot Card App\" />\n      </a>\n      <p>\n        Tarot Universe is a tarot card reading application I developed independently using HTML, CSS, and JavaScript,\n        as well as a publicly available API for each of the card descriptions. \n        The project utilizes CSS animations, DOM manipulation through JavaScript, and API calls using axios.\n      </p>\n      <a href=\"http://dnd-char-creator.surge.sh/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2>Dungeons & Dragons Character Creator</h2>\n        <img src=\"/images/dnd-char.png\" alt=\"DnD Character Creator\" />\n      </a>\n      <p>\n        This is the first full React app I developed on my own, offering a quick and easy way for users\n        to generate a character for the popular Dungeons and Dragons tabletop roleplaying game.\n        The application relies on the <a href=\"http://www.dnd5eapi.co/\" target=\"_blank\" rel=\"noopener noreferrer\">D&D 5e API</a> and makes use of\n        conditional rendering, HTML forms, and stateful components all based in React.\n      </p>\n      <a href=\"http://pixel-pals.s3-website-us-east-1.amazonaws.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2>Pixel Pals Website</h2>\n        <img src=\"/images/pixel-pals.png\" alt=\"Pixel Pals Website\" />\n      </a>\n      <p>\n        Pixel Pals is a small passion project of mine which features its own backend database.\n        The website allows users to create an account, customize their own avatar, as well as view and comment\n        on other users' profiles. All of the art featured on the site was created by me, and user data is saved\n        to a backend using Ruby on Rails and a custom API. \n      </p>\n      <a href=\"http://waverlyinn.surge.sh\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2>Waverly Inn Website Redesign</h2>\n        <img src=\"/images/waverly-inn.png\" alt=\"Waverly Inn Restaurant\" />\n      </a>\n      <p>\n        The Waverly Inn is a popular yet exclusive restaurant in New York City.\n        Their website was redesigned by a small team of UX designers as a learning opportunity,\n        and I had the pleasure of building out their designs in React alongside a small team of other developers.\n        This project relied on Agile methodologies, user stories, wireframes and mockups, \n        and was an excellent opportunity to work collaboritively with both designers and developers. \n      </p>\n    </main>\n  )\n}\n\nexport default Projects;","import React from 'react';\n\nfunction Resume() {\n  return (\n    <main>\n      <iframe width=\"100%\" height=\"600px\" src=\"https://www.docdroid.net/YXY92VG/coreyferland-resume2020.pdf\" frameborder=\"0\" allowtransparency allowfullscreen></iframe>\n    </main>\n  )\n}\n\nexport default Resume;","import React from 'react';\nimport emailjs from 'emailjs-com';\n\nfunction Contact() {\n\n  function sendEmail(e) {\n    e.preventDefault();\n\n    emailjs.sendForm('gmail', 'contact_form', e.target, 'user_o5d0X8VlO5YBH6wc4YAnI')\n      .then((result) => {\n        console.log(result.text);\n        alert('Message successfully sent!');\n      }, (error) => {\n        console.log(error.text);\n        alert('Message failed to send! Please try again later.');\n      });\n  }\n\n  return (\n    <main>\n      <p>\n        Fill out the form below if you'd like to get in touch for any reason.\n        I will do my best to respond to your message via email as quickly as possible.\n        You can also view my LinkedIn and GitHub profiles by clicking the icons in the footer below.\n      </p>\n      <form id=\"contact-form\" onSubmit={sendEmail}>\n        <input type=\"hidden\" name=\"contact_number\" />\n        <label htmlFor=\"user_name\">Name</label>\n        <input name=\"user_name\" type=\"text\" />\n        <label htmlFor=\"user_email\">Email</label>\n        <input name=\"user_email\" type=\"email\" />\n        <label htmlFor=\"message\">Message</label>\n        <textarea name=\"message\" />\n        <button type=\"submit\" value=\"Send\">Submit</button>\n      </form>\n    </main>\n  )\n}\n\nexport default Contact;","import React from 'react';\nimport './App.css';\nimport { Route } from 'react-router-dom';\n\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Home from './components/home';\nimport Projects from './components/projects';\nimport Resume from './components/resume';\nimport Contact from './components/contact';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Route exact path=\"/\"><Home /></Route>\n      <Route path=\"/projects\"><Projects /></Route>\n      <Route path=\"/resume\"><Resume /></Route>\n      <Route path=\"/contact\"><Contact /></Route>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}